
Contents
========

    * Programs
    * Software Dependencies
    * Download
    * Atomic Lines
    * Installation
    * Documentation
    * Citing SYN++ or SYNAPPS
    * License
    * What Does ES Mean?
    * Author 

Programs
========

The ES package builds two main executables of interest.

    * SYN++
      Consider this a rewrite of the original SYNOW code in C++. It has
      a few further enhancements, a new structured input file format,
      and the atomic data files have been repackaged and are more complete
      than what SYNOW has.

    * SYNAPPS
      This code uses the same library code that SYN++ does to implement
      a spectrum synthesis calculation within the objective function of a
      parallel optimization framework. So, SYNAPPS is something of an
      automated SYN++. The idea is for SYNAPPS to do the work so supernova
      spectroscopists can do thinking. 

Software Dependencies
=====================

ES has one mandatory software dependency, and two others that you can
ignore if you only want to build SYN++. To build SYNAPPS you need to be
able to build MPI code (see, for example, OpenMPI). You can also enable
OpenMP for full multi-level parallelism. For details, see Installation
below.

    * CFITSIO FITS I/O
      Mandatory for building both SYN++ and SYNAPPS. Atomic line list
      files are stored in FITS format, eliminating a support issue SYNOW
      had with byte rotation.

    * BLAS Basic Linear Algebra Subprograms
      Mandatory for building SYNAPPS, but not SYN++.

    * LAPACK Linear Algebra Package
      Mandatory for building SYNAPPS, but not SYN++. 

A word about OpenMP. SYN++ and SYNAPPS can both take advantage of OpenMP
if you have it available with your compiler. The spectrum synthesis
calculation can be made faster with OpenMP but don't expect it to scale
arbitrarily (diminishing returns around 2-8 cores). In order to use
OpenMP at the same time as running SYNAPPS you probably really need to
know what you are doing. Contact the author if you have questions.

Download
========

See also the section on Atomic Lines.

    * Current: Version 0.95. 

The project is also hosted at github. If you want to collaborate, please
contact the author.

Installation
============

It should go something like this on a Unix-like system:

    $ tar zxvf es-0.95.tar.gz
    $ cd es-0.95
    $ ./configure
    $ make
    $ make install

Of course, you may need to pass options to configure though (see
"./configure -h" for all of them). Most commonly one will need to use
the --prefix flag.  Suppose you do not have super-user privileges to
install the code to the default location. Then you can do something
like:

    $ ./configure --prefix=$HOME/local

The "install" target deposits the ES executables and corresponding
example control files into the installation path. No libraries or
headers are installed. If you use the above example, this structure
will be added to the file system:

    $HOME/
        local/
            bin/
                syn++
                synapps
                ...
            share/
                syn++.yaml
                synapps.yaml
                ...

Most supernova researchers I know work on OS X.  Personally I use
MacPorts to install Unix-like packages (see above for software
dependencies). This works for me on Mac OS X Snow Leopard with MacPorts:

    $ ./configure --with-cfitsio-cpp="-I/opt/local/include" \
        --with-cfitsio-libs="-L/opt/local/lib -lcfitsio"

And that was all I needed (it enables OpenMP and finds blas and lapack
just fine).

The "platforms" subdirectory may include an example shell script that 
can help you. If you can't get it working, just contact the author.

Thanks to Ted Kisner for help with the GNU build tools.

Atomic Lines
============

In order to run the code, you will need the atomic line data files. They
are available in the format ES needs at the website where the ES code is
downloaded in a single tar.gz file. Once you have downloaded them, you 
unpack them into some path (I recommend placing them where the example
YAML control files are installed). Use this path when running any of the
ES executables. Here is an example of how you might set things up for
all the users on your system, assuming you've downloaded the atomic data
and have super-user privileges already:

    $ mv es-data.tar.gz /usr/local/share
    $ cd /usr/local/share
    $ tar zxvf es-data.tar.gz

Then, in one of the control files for an ES executable, you set:

    opacity :
        line_dir    : /usr/local/share/es/lines
        ref_file    : /usr/local/share/es/refs.dat

If you don't have super-user privileges, you could unpack the atomic
line data files into $HOME/local/share (following the example install
for ordinary users under the Installation section above).

Documentation
=============

The most important documentation is the web page, the INSTALL, and
README files that come with the source code. There are sample input
files for users to orient themselves with. More detailed documentation
can be generated from the ES source using doxygen but this is mostly
only of interest to developers.

There is also a code-description paper explaining the motivation for
developing the code, and also outlining the technique.

Citing SYN++ or SYNAPPS 
=======================

If you use SYN++ or SYNAPPS in your own research, please cite
the code-description paper. The proper bibliography entry is is

Thomas, R. C., Nugent, P. E., and Meza, J. C., 2010, ...

License
=======

ES is distributed ...

What Does ES Mean?
==================

ES stands for "Elementary Supernova," a term used by Jeffery and Branch
(1990) to describe a conceptual model that serves as the basis for a
number of computer codes used in the analysis of supernova spectra. See
Branch, Baron, and Jeffery (2003) and references therein to learn more.

SYNOW is the classic example ES code. Originally written by David
Branch, and then updated and modernized (in 1993) by Adam Fisher at the
University of Oklahoma, SYNOW has become a widely used tool among
supernova scientists. Learning to use SYNOW is a rite of passage for
many budding supernova spectroscopists.

Author
======

ES was developed by R. C. Thomas at Lawrence Berkeley Lab.

========================
Sat May 22 11:51:14 2010
========================
