#!/usr/bin/env python

from pyES import Common, Synpp, Synapps

import random

def realize_variable( variable ) :
    return variable.start if variable.fixed else random.uniform( variable.lower, variable.upper )

def realize_ion( ion ) :
    realization = None
    if ion.active :
        log_tau = realize_variable( ion.log_tau )
        v_min   = realize_variable( ion.v_min   )
        v_max   = realize_variable( ion.v_max   )
        aux     = realize_variable( ion.aux     )
        temp    = realize_variable( ion.temp    )
        realization = Synpp.Ion( ion.ion, ion.active, log_tau, v_min, v_max, aux, temp )
    else :
        log_tau = ion.log_tau.start
        v_min   = ion.v_min.start
        v_max   = ion.v_max.start
        aux     = ion.aux.start
        temp    = ion.temp.start
        realization = Synpp.Ion( ion.ion, ion.active, log_tau, v_min, v_max, aux, temp )
    return realization

if __name__ == "__main__" :

    import optparse
    import sys
    import yaml
    
    #- Command line.
    
    parser = optparse.OptionParser( usage = "usage: %prog [options] synapps.yaml" )
    parser.add_option( "--num-setups", default = 10, type = int, help = "Number of setup realizations (%default)." )
    opts, args = parser.parse_args()
    
    #- Synapps control object.
    
    synapps = Synapps.Synapps.create( yaml.load( open( args[ 0 ], "r" ) ) )
    
    #- Start creating syn++ control file.
    
    output   = Synpp.Output.create()
    grid     = synapps.grid
    opacity  = synapps.opacity
    source   = synapps.source
    spectrum = synapps.spectrum
    
    #- Generate random setups.
    
    setups = []
    for i in range( opts.num_setups ) :
        setups.append( Synpp.Setup.create() )
        setups[ -1 ].a0      = realize_variable( synapps.config.a0      )
        setups[ -1 ].a1      = realize_variable( synapps.config.a1      )
        setups[ -1 ].a2      = realize_variable( synapps.config.a2      )
        setups[ -1 ].v_phot  = realize_variable( synapps.config.v_phot  )
        setups[ -1 ].v_outer = realize_variable( synapps.config.v_outer )
        setups[ -1 ].t_phot  = realize_variable( synapps.config.t_phot  )
        for ion in synapps.config.ions :
            setups[ -1 ].ions.append( realize_ion( ion ) )
            if not ion.detach :
                setups[ -1 ].ions[ -1 ].v_min = setups[ -1 ].v_phot

    #- Output.

    print Synpp.Synpp( output, grid, opacity, source, spectrum, setups )
